{"version":3,"sources":["candy-machine.ts","theme/index.js","utils/firebase_.ts","assets/images/art1.jpg","assets/images/art2.jpg","assets/images/art3.jpg","assets/images/art4.jpg","components/ImageSlider/ImageSlider.tsx","Home.tsx","assets/images/header_image.png","components/AppBar/CustomAppBar.tsx","assets/images/discord.svg","assets/images/medium.png","assets/images/twitter.svg","assets/styles.ts","components/Footer/Footer.tsx","layouts/DashboardLayout/index.tsx","WalletWrapper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","shortenAddress","address","chars","slice","ms","theme","createTheme","palette","type","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","undefined","padding","startIcon","marginRight","endIcon","marginLeft","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","getAnalytics","SwiperCore","use","Navigation","useStyles","makeStyles","sliderRoot","height","imageStyle","width","objectFit","mySwiper","ImageSlider","props","classes","className","pagination","el","clickable","navigation","nextEl","prevEl","spaceBetween","src","image2","alt","image3","image4","image1","ConnectButton","styled","WalletDialogButton","CounterText","MintContainer","div","MintButton","Button","renderCounter","days","hours","minutes","seconds","completed","Home","useState","balance","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","open","message","severity","alertState","setAlertState","startDate","setStartDate","useAnchorWallet","setCandyMachine","onMint","mintTxId","txTimeout","msg","code","indexOf","getBalance","LAMPORTS_PER_SOL","useEffect","toBase58","toLocaleString","disabled","onClick","variant","CircularProgress","date","onMount","onComplete","renderer","Snackbar","autoHideDuration","onClose","Alert","appBarRoot","position","backgroundImage","boxShadow","appBarLogo","display","alignItems","appBarLogoImage","maxWidth","CustomAppBar","AppBar","elevation","Grid","container","item","md","alignContent","HeaderLogo","fonts","baseFooterRoot","borderTop","bigFooterRoot","flexDirection","smallFooterRoot","isForSmallScreen","breakpoints","down","isForBigScreen","footerIcon","footerText","textAlign","fontFamily","color","fontSize","fontWeight","footerSocialIcons","footerSocialItem","FooterComponents","href","target","rel","TwitterLogo","MediumLogo","DiscordLogo","Footer","clsx","backgroundColor","background","dark","overflow","content","flex","footer","paper","spacing","DashboardLayout","children","process","network","Connection","startDateSeed","parseInt","WalletWrapper","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","autoConnect","App","React","setUserProperties","environment","logEvent","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e10a58c8.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","import { createTheme } from \"@material-ui/core/styles\";\n\nconst theme = createTheme({\n  palette: {\n    type: \"dark\",\n  },\n  overrides: {\n    MuiButtonBase: {\n      root: {\n        justifyContent: \"flex-start\",\n      },\n    },\n    MuiButton: {\n      root: {\n        textTransform: undefined,\n        padding: \"12px 16px\",\n      },\n      startIcon: {\n        marginRight: 8,\n      },\n      endIcon: {\n        marginLeft: 8,\n      },\n    },\n  },\n});\n\nexport default theme;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBzgKFIBgS3J_UFRCg3aOJXwZKSfV_ACOA\",\n  authDomain: \"solanapaintapp.firebaseapp.com\",\n  projectId: \"solanapaintapp\",\n  storageBucket: \"solanapaintapp.appspot.com\",\n  messagingSenderId: \"1082634177420\",\n  appId: \"1:1082634177420:web:5f7af8e2c18dcc55ac64a9\",\n  measurementId: \"G-6Z4QXZEB25\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const analytics = getAnalytics(app);\n","export default __webpack_public_path__ + \"static/media/art1.734f5660.jpg\";","export default __webpack_public_path__ + \"static/media/art2.c38ad208.jpg\";","export default __webpack_public_path__ + \"static/media/art3.67113932.jpg\";","export default __webpack_public_path__ + \"static/media/art4.beb7f9c6.jpg\";","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport image1 from \"src/assets/images/art1.jpg\";\nimport image2 from \"src/assets/images/art2.jpg\";\nimport image3 from \"src/assets/images/art3.jpg\";\nimport image4 from \"src/assets/images/art4.jpg\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.css\";\n\nSwiperCore.use([Navigation]);\n\nconst useStyles = makeStyles((theme) => ({\n  sliderRoot: {\n    height: 600,\n  },\n  imageStyle: {\n    height: 600,\n    width: \"100%\",\n    objectFit: \"cover\",\n  },\n  mySwiper: {},\n}));\n\nconst ImageSlider = (props: any) => {\n  const classes = useStyles();\n\n  const params: any = {\n    pagination: {\n      el: \".swiper-pagination\",\n      type: \"bullets\",\n      clickable: true,\n    },\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    spaceBetween: 30,\n  };\n\n  return (\n    <div className={classes.sliderRoot}>\n      <Swiper {...params} className={classes.mySwiper}>\n        <SwiperSlide>\n          <img src={image2} alt=\"\" className={classes.imageStyle} />\n        </SwiperSlide>\n        <SwiperSlide>\n          <img src={image3} alt=\"\" className={classes.imageStyle} />\n        </SwiperSlide>\n        <SwiperSlide>\n          <img src={image4} alt=\"\" className={classes.imageStyle} />\n        </SwiperSlide>\n        <SwiperSlide>\n          <img src={image1} alt=\"\" className={classes.imageStyle} />\n        </SwiperSlide>\n      </Swiper>\n    </div>\n  );\n};\n\nexport default ImageSlider;\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(() => {\n    (async () => {\n      if (!wallet) return;\n\n      const { candyMachine, goLiveDate, itemsRemaining } =\n        await getCandyMachineState(\n          wallet as anchor.Wallet,\n          props.candyMachineId,\n          props.connection\n        );\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  }, [wallet, props.candyMachineId, props.connection]);\n\n  return (\n    <main>\n      {wallet && (\n        <p>Address: {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>\n      )}\n\n      {wallet && (\n        <p>Balance: {(balance || 0).toLocaleString()} SOL</p>\n      )}\n\n      <MintContainer>\n        {!wallet ? (\n          <ConnectButton>Connect Wallet</ConnectButton>\n        ) : (\n          <MintButton\n            disabled={isSoldOut || isMinting || !isActive}\n            onClick={onMint}\n            variant=\"contained\"\n          >\n            {isSoldOut ? (\n              \"SOLD OUT\"\n            ) : isActive ? (\n              isMinting ? (\n                <CircularProgress />\n              ) : (\n                \"MINT\"\n              )\n            ) : (\n              <Countdown\n                date={startDate}\n                onMount={({ completed }) => completed && setIsActive(true)}\n                onComplete={() => setIsActive(true)}\n                renderer={renderCounter}\n              />\n            )}\n          </MintButton>\n        )}\n      </MintContainer>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {hours} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/header_image.fb60a697.png\";","import { Grid } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport HeaderLogo from \"src/assets/images/header_image.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBarRoot: {\n    position: \"relative\",\n    height: 128,\n    backgroundImage:\n      \"linear-gradient(rgba(12, 241, 167, 1), rgba(216, 34, 253, 1))\",\n    boxShadow: \"0 7px 15px 5px rgb(0 0 0 / 45%)\",\n  },\n  appBarLogo: {\n    height: \"100%\",\n    width: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"15px 0\",\n  },\n  appBarLogoImage: {\n    maxWidth: \"500px\",\n    width: \"100%\",\n    objectFit: \"contain\",\n  },\n}));\n\nexport default function CustomAppBar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" elevation={0} className={classes.appBarRoot}>\n      <Grid\n        container\n        item\n        md={12}\n        alignContent=\"center\"\n        alignItems=\"center\"\n        className={classes.appBarLogo}\n      >\n        <img src={HeaderLogo} alt=\"icon\" className={classes.appBarLogoImage} />\n      </Grid>\n    </AppBar>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/discord.9a823ca6.svg\";","export default __webpack_public_path__ + \"static/media/medium.28e3fc64.png\";","export default __webpack_public_path__ + \"static/media/twitter.d8f1c3ad.svg\";","export const fonts = {\n  fontLora: \"Lora, serif\",\n  fontFed: \"Fredericka the Great, cursive\",\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport DiscordLogo from \"src/assets/images/discord.svg\";\nimport HeaderLogo from \"src/assets/images/header_image.png\";\nimport MediumLogo from \"src/assets/images/medium.png\";\nimport TwitterLogo from \"src/assets/images/twitter.svg\";\nimport { fonts } from \"src/assets/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  baseFooterRoot: {\n    padding: \"48px 20px 64px\",\n    borderTop: \"solid #498270 5px\",\n    backgroundImage:\n      \"linear-gradient(rgba(12, 241, 167, 1), rgba(216, 34, 253, 1))\",\n  },\n  bigFooterRoot: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n  },\n\n  smallFooterRoot: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n\n  isForSmallScreen: {\n    display: \"none\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n    },\n  },\n  isForBigScreen: {\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n\n  footerIcon: { width: \"300px\" },\n  footerText: {\n    textAlign: \"center\",\n    fontFamily: fonts.fontFed,\n    color: \"#fff\",\n    fontSize: 32,\n    fontWeight: 400,\n    padding: \"32px 0\",\n  },\n  footerSocialIcons: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  footerSocialItem: {\n    marginLeft: 8,\n    marginRight: 8,\n  },\n}));\n\nconst FooterComponents = (props: any) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <img src={HeaderLogo} alt=\"icon\" className={classes.footerIcon} />\n      <div className={classes.footerText}>Copyright © SOLANA PAINT</div>\n      <div className={classes.footerSocialIcons}>\n        <a\n          href=\"https://twitter.com/SolanaPaint\"\n          className={classes.footerSocialItem}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <img src={TwitterLogo} alt=\"icon\" width=\"30\" />\n        </a>\n        <a\n          href=\"https://twitter.com/SolanaPaint\"\n          className={classes.footerSocialItem}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <img src={MediumLogo} alt=\"icon\" height=\"30\" />\n        </a>\n        <a\n          href=\"https://twitter.com/SolanaPaint\"\n          className={classes.footerSocialItem}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <img src={DiscordLogo} alt=\"icon\" width=\"30\" />\n        </a>\n      </div>\n    </>\n  );\n};\n\nconst Footer = (props: any) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div\n        className={clsx(\n          classes.bigFooterRoot,\n          classes.isForBigScreen,\n          classes.baseFooterRoot\n        )}\n      >\n        <FooterComponents />\n      </div>\n      <div\n        className={clsx(\n          classes.smallFooterRoot,\n          classes.isForSmallScreen,\n          classes.baseFooterRoot\n        )}\n      >\n        <FooterComponents />\n      </div>\n    </>\n  );\n};\n\nexport default Footer;\n","import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport CustomAppBar from \"src/components/AppBar/CustomAppBar\";\nimport Footer from \"src/components/Footer/Footer\";\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    width: \"100%\",\n  },\n  content: {\n    flex: \"1 1 auto\",\n    height: \"100%\",\n    overflow: \"hidden\",\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst DashboardLayout = (props: any) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CustomAppBar />\n      <div className={classes.content}>{props.children}</div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import * as anchor from \"@project-serum/anchor\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletExtensionWallet,\n  getSolletWallet,\n} from \"@solana/wallet-adapter-wallets\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport React, { useMemo } from \"react\";\nimport \"./App.css\";\nimport ImageSlider from \"./components/ImageSlider/ImageSlider\";\nimport Home from \"./Home\";\nimport DashboardLayout from \"./layouts/DashboardLayout\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst WalletWrapper = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSlopeWallet(),\n      getSolflareWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    []\n  );\n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets} autoConnect>\n        <WalletDialogProvider>\n          <DashboardLayout>\n            <ImageSlider />\n            <Home\n              candyMachineId={candyMachineId}\n              config={config}\n              connection={connection}\n              startDate={startDateSeed}\n              treasury={treasury}\n              txTimeout={txTimeout}\n            />\n          </DashboardLayout>\n        </WalletDialogProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n};\n\nexport default WalletWrapper;\n","import { ThemeProvider } from \"@material-ui/core\";\nimport { logEvent, setUserProperties } from \"firebase/analytics\";\nimport React from \"react\";\nimport \"./App.css\";\nimport theme from \"./theme\";\nimport { analytics } from \"./utils/firebase_\";\nimport WalletWrapper from \"./WalletWrapper\";\n\nconst App = () => {\n  React.useEffect(() => {\n    setUserProperties(analytics, {\n      environment: process.env.REACT_APP_ENVIRONMENT,\n    });\n    logEvent(analytics, \"home_page\");\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <WalletWrapper />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}